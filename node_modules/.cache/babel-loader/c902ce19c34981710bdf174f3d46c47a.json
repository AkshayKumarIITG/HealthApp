{"ast":null,"code":"var _jsxFileName = \"/Users/crypto/OneDrive - Tesco/Documents/hacathon/food-nutrients/src/components/micro-nutrient/index.js\";\n\n/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Progress } from 'antd';\nexport default class MicroNutrient extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      wiki: '#',\n      percentage: 0,\n      raw: 0,\n      amount: 0,\n      unit: 'μg',\n      nutrientStatus: 'normal'\n    };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (!nextProps.microNutrientData) return this.state.raw !== 0 || this.state.name === '';\n    return nextProps.microNutrientData.raw !== this.state.raw || nextProps.microNutrientData.unit !== this.state.unit;\n  }\n\n  static getDerivedStateFromProps(newProps, prevState) {\n    return {\n      name: newProps.microNutrient.name,\n      wiki: newProps.microNutrient.wiki,\n      percentage: newProps.microNutrientData ? newProps.microNutrientData.percentage : 0,\n      raw: newProps.microNutrientData ? newProps.microNutrientData.raw : 0,\n      amount: newProps.microNutrientData ? newProps.microNutrientData.amount : 0,\n      unit: newProps.microNutrientData ? newProps.microNutrientData.unit : 'μg',\n      nutrientStatus: newProps.microNutrientData ? MicroNutrient.nutrientStatus(newProps.microNutrientData) : 'normal'\n    };\n  }\n\n  static nutrientStatus(microNutrient) {\n    let barType = 'normal';\n\n    if (microNutrient.raw >= microNutrient.rda && microNutrient.raw < 1.5 * microNutrient.rda) {\n      barType = 'success';\n    } else if (microNutrient.raw >= 1.5 * microNutrient.rda) {\n      barType = 'exception';\n    }\n\n    return barType;\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          wiki = _this$state.wiki,\n          percentage = _this$state.percentage,\n          amount = _this$state.amount,\n          unit = _this$state.unit,\n          nutrientStatus = _this$state.nutrientStatus;\n    return React.createElement(\"div\", {\n      key: name,\n      className: \"microNutrient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"microNutrientName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: wiki,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, name)), React.createElement(\"div\", {\n      className: \"microNutrientProgressBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      showInfo: false,\n      status: nutrientStatus,\n      percent: percentage,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, percentage, \"% \")), React.createElement(\"div\", {\n      className: \"microNutrientAmount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, amount, \" \", unit));\n  }\n\n}\nMicroNutrient.propTypes = {\n  microNutrient: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    wiki: PropTypes.string.isRequired\n  }).isRequired,\n  microNutrientData: PropTypes.shape({\n    raw: PropTypes.number.isRequired,\n    amount: PropTypes.number.isRequired,\n    percentage: PropTypes.number.isRequired,\n    unit: PropTypes.string.isRequired\n  })\n};\nMicroNutrient.defaultProps = {\n  microNutrientData: null\n};","map":{"version":3,"sources":["/Users/crypto/OneDrive - Tesco/Documents/hacathon/food-nutrients/src/components/micro-nutrient/index.js"],"names":["React","Component","PropTypes","Progress","MicroNutrient","state","name","wiki","percentage","raw","amount","unit","nutrientStatus","shouldComponentUpdate","nextProps","microNutrientData","getDerivedStateFromProps","newProps","prevState","microNutrient","barType","rda","render","propTypes","shape","string","isRequired","number","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Progress } from 'antd'\n\nexport default class MicroNutrient extends Component {\n  static propTypes = {\n    microNutrient: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      wiki: PropTypes.string.isRequired,\n    }).isRequired,\n    microNutrientData: PropTypes.shape({\n      raw: PropTypes.number.isRequired,\n      amount: PropTypes.number.isRequired,\n      percentage: PropTypes.number.isRequired,\n      unit: PropTypes.string.isRequired,\n    }),\n  }\n\n  static defaultProps = {\n    microNutrientData: null,\n  }\n  state = {\n    name: '',\n    wiki: '#',\n    percentage: 0,\n    raw: 0,\n    amount: 0,\n    unit: 'μg',\n    nutrientStatus: 'normal',\n  }\n  shouldComponentUpdate(nextProps) {\n    if (!nextProps.microNutrientData) return this.state.raw !== 0 || this.state.name === ''\n    return (\n      nextProps.microNutrientData.raw !== this.state.raw ||\n      nextProps.microNutrientData.unit !== this.state.unit\n    )\n  }\n  static getDerivedStateFromProps(newProps, prevState) {\n    return {\n      name: newProps.microNutrient.name,\n      wiki: newProps.microNutrient.wiki,\n      percentage: newProps.microNutrientData ? newProps.microNutrientData.percentage : 0,\n      raw: newProps.microNutrientData ? newProps.microNutrientData.raw : 0,\n      amount: newProps.microNutrientData ? newProps.microNutrientData.amount : 0,\n      unit: newProps.microNutrientData ? newProps.microNutrientData.unit : 'μg',\n      nutrientStatus: newProps.microNutrientData\n        ? MicroNutrient.nutrientStatus(newProps.microNutrientData)\n        : 'normal',\n    }\n  }\n\n  static nutrientStatus(microNutrient) {\n    let barType = 'normal'\n    if (microNutrient.raw >= microNutrient.rda && microNutrient.raw < 1.5 * microNutrient.rda) {\n      barType = 'success'\n    } else if (microNutrient.raw >= 1.5 * microNutrient.rda) {\n      barType = 'exception'\n    }\n    return barType\n  }\n\n  render() {\n    const { name, wiki, percentage, amount, unit, nutrientStatus } = this.state\n\n    return (\n      <div key={name} className=\"microNutrient\">\n        <div className=\"microNutrientName\">\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={wiki}>\n            {name}\n          </a>\n        </div>\n        <div className=\"microNutrientProgressBar\">\n          <Progress showInfo={false} status={nutrientStatus} percent={percentage} size=\"small\" />\n          <span>{percentage}% </span>\n        </div>\n        <div className=\"microNutrientAmount\">\n          {amount} {unit}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/crypto/OneDrive - Tesco/Documents/hacathon/food-nutrients/src/components/macro-nutrients/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MacroPieChart from '../macro-pie-chart';\nimport { defaultMacroNutrients } from './../calculations';\nimport './../../App.css';\nimport MacroNutrient from '../macro-nutrient';\nexport default class MacroNutrients extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      macroNutrients: []\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const macroNutrients = nextProps.macroNutrients;\n    return {\n      macroNutrients: [macroNutrients.calories, macroNutrients.proteins, macroNutrients.carbs, macroNutrients.fats]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"macroNutrients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.macroNutrients.map(macroNutrient => React.createElement(MacroNutrient, {\n      key: macroNutrient.name,\n      name: macroNutrient.name,\n      amount: macroNutrient.amount,\n      units: macroNutrient.unit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(MacroPieChart, {\n      proteins: this.props.macroNutrients.proteins.amount,\n      carbohydrates: this.props.macroNutrients.carbs.amount,\n      fat: this.props.macroNutrients.fats.amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\nMacroNutrients.macroNutrientShape = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  raw: PropTypes.number.isRequired,\n  amount: PropTypes.number.isRequired,\n  unit: PropTypes.string.isRequired\n});\nMacroNutrients.propTypes = {\n  macroNutrients: PropTypes.shape({\n    calories: MacroNutrients.macroNutrientShape,\n    proteins: MacroNutrients.macroNutrientShape,\n    carbs: MacroNutrients.macroNutrientShape,\n    fats: MacroNutrients.macroNutrientShape\n  })\n};\nMacroNutrients.defaultProps = {\n  macroNutrients: defaultMacroNutrients\n};","map":{"version":3,"sources":["/Users/crypto/OneDrive - Tesco/Documents/hacathon/food-nutrients/src/components/macro-nutrients/index.js"],"names":["React","Component","PropTypes","MacroPieChart","defaultMacroNutrients","MacroNutrient","MacroNutrients","state","macroNutrients","getDerivedStateFromProps","nextProps","calories","proteins","carbs","fats","render","map","macroNutrient","name","amount","unit","props","macroNutrientShape","shape","string","isRequired","raw","number","propTypes","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,OAAO,iBAAP;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AAEA,eAAe,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAoBpDM,KApBoD,GAoB5C;AACNC,MAAAA,cAAc,EAAE;AADV,KApB4C;AAAA;;AAuBpD,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2C;AACzC,UAAMF,cAAc,GAAGE,SAAS,CAACF,cAAjC;AAEA,WAAO;AACLA,MAAAA,cAAc,EAAE,CACdA,cAAc,CAACG,QADD,EAEdH,cAAc,CAACI,QAFD,EAGdJ,cAAc,CAACK,KAHD,EAIdL,cAAc,CAACM,IAJD;AADX,KAAP;AAQD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWC,cAAX,CAA0BQ,GAA1B,CAA8BC,aAAa,IAC1C,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEA,aAAa,CAACC,IADrB;AAEE,MAAA,IAAI,EAAED,aAAa,CAACC,IAFtB;AAGE,MAAA,MAAM,EAAED,aAAa,CAACE,MAHxB;AAIE,MAAA,KAAK,EAAEF,aAAa,CAACG,IAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EASE,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWb,cAAX,CAA0BI,QAA1B,CAAmCO,MAD/C;AAEE,MAAA,aAAa,EAAE,KAAKE,KAAL,CAAWb,cAAX,CAA0BK,KAA1B,CAAgCM,MAFjD;AAGE,MAAA,GAAG,EAAE,KAAKE,KAAL,CAAWb,cAAX,CAA0BM,IAA1B,CAA+BK,MAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAiBD;;AArDmD;AAAjCb,c,CACZgB,kB,GAAqBpB,SAAS,CAACqB,KAAV,CAAgB;AAC1CL,EAAAA,IAAI,EAAEhB,SAAS,CAACsB,MAAV,CAAiBC,UADmB;AAE1CC,EAAAA,GAAG,EAAExB,SAAS,CAACyB,MAAV,CAAiBF,UAFoB;AAG1CN,EAAAA,MAAM,EAAEjB,SAAS,CAACyB,MAAV,CAAiBF,UAHiB;AAI1CL,EAAAA,IAAI,EAAElB,SAAS,CAACsB,MAAV,CAAiBC;AAJmB,CAAhB,C;AADTnB,c,CAQZsB,S,GAAY;AACjBpB,EAAAA,cAAc,EAAEN,SAAS,CAACqB,KAAV,CAAgB;AAC9BZ,IAAAA,QAAQ,EAAEL,cAAc,CAACgB,kBADK;AAE9BV,IAAAA,QAAQ,EAAEN,cAAc,CAACgB,kBAFK;AAG9BT,IAAAA,KAAK,EAAEP,cAAc,CAACgB,kBAHQ;AAI9BR,IAAAA,IAAI,EAAER,cAAc,CAACgB;AAJS,GAAhB;AADC,C;AARAhB,c,CAiBZuB,Y,GAAe;AACpBrB,EAAAA,cAAc,EAAEJ;AADI,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport MacroPieChart from '../macro-pie-chart'\nimport { defaultMacroNutrients } from './../calculations'\n\nimport './../../App.css'\nimport MacroNutrient from '../macro-nutrient'\n\nexport default class MacroNutrients extends Component {\n  static macroNutrientShape = PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    raw: PropTypes.number.isRequired,\n    amount: PropTypes.number.isRequired,\n    unit: PropTypes.string.isRequired,\n  })\n\n  static propTypes = {\n    macroNutrients: PropTypes.shape({\n      calories: MacroNutrients.macroNutrientShape,\n      proteins: MacroNutrients.macroNutrientShape,\n      carbs: MacroNutrients.macroNutrientShape,\n      fats: MacroNutrients.macroNutrientShape,\n    }),\n  }\n\n  static defaultProps = {\n    macroNutrients: defaultMacroNutrients,\n  }\n  state = {\n    macroNutrients: [],\n  }\n  static getDerivedStateFromProps(nextProps) {\n    const macroNutrients = nextProps.macroNutrients\n\n    return {\n      macroNutrients: [\n        macroNutrients.calories,\n        macroNutrients.proteins,\n        macroNutrients.carbs,\n        macroNutrients.fats,\n      ],\n    }\n  }\n  render() {\n    return (\n      <div className=\"macroNutrients\">\n        {this.state.macroNutrients.map(macroNutrient => (\n          <MacroNutrient\n            key={macroNutrient.name}\n            name={macroNutrient.name}\n            amount={macroNutrient.amount}\n            units={macroNutrient.unit}\n          />\n        ))}\n        <MacroPieChart\n          proteins={this.props.macroNutrients.proteins.amount}\n          carbohydrates={this.props.macroNutrients.carbs.amount}\n          fat={this.props.macroNutrients.fats.amount}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}